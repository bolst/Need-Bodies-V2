@using NeedBodies.Auth
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<Bar NavigationBreakpoint="Breakpoint.Tablet" ThemeContrast="ThemeContrast.Dark" Mode="BarMode.VerticalInline"
    CollapseMode="@CollapseMode" Background="Background.Dark" Visible="@BarVisible">
    <BarBrand>
        <BarItem>
            <BarLink To="">
                <BarIcon IconName="customIcon" />
                Need Bodies
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/">
                    <BarIcon IconName="IconName.Home" />
                    Home
                </BarLink>
            </BarItem>
            <AuthorizeView>
                <Authorized>

                    <BarItem>
                        <BarLink To="/usergames">
                            <BarIcon IconName="IconName.PlayCircle" />
                            My Games
                        </BarLink>
                    </BarItem>
                    <BarItem>
                        <BarLink To="/addgame">
                            <BarIcon IconName="IconName.PlusCircle" />
                            Add Game
                        </BarLink>
                    </BarItem>

                </Authorized>
            </AuthorizeView>
        </BarStart>
        <BarEnd>
            <AuthorizeView>
                <Authorized>
                    <BarItem>
                        <BarLink To="/profile">
                            <BarIcon IconName="IconName.UserCircle" />
                            Profile
                        </BarLink>
                    </BarItem>
                    <BarItem>
                        <BarLink Clicked="LogOutAsync">
                            <BarIcon IconName="IconName.ArrowLeft" />
                            Log Out
                        </BarLink>
                    </BarItem>
                </Authorized>
                <NotAuthorized>
                    <BarItem>
                        <BarLink To="/auth">
                            <BarIcon IconName="IconName.User" />
                            Log In
                        </BarLink>
                    </BarItem>
                </NotAuthorized>
            </AuthorizeView>
        </BarEnd>
    </BarMenu>
</Bar>
@code {
    [Parameter] public BarCollapseMode CollapseMode { get; set; } = BarCollapseMode.Hide;
    [Parameter] public bool BarVisible { get; set; } = false;
    [Parameter] public EventCallback<bool> BarVisibleChanged { get; set; }

    private bool pagesBarVisible = true;

    RenderFragment customIcon =@<img src="/brand-logo.png" style="width:32px; height: 32px" />;

    async Task LogOutAsync()
    {
        var userAuthStateProvider = (UserAuthenticationStateProvider)authStateProvider;
        await userAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}