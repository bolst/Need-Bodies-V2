@page "/gamepage"
@namespace NeedBodies.Pages.GamePage
@inject NavigationManager navManager

@if (Game != null)
{
    <Span>@Game.Id</Span>
    <br>
    <Span>@Game.DisplayName</Span>
    <br>
    <Span>@Game.Date</Span>
    <br>
    <Span>@Game.ArenaName</Span>
    <br>
    <Span>@Game.Visibility</Span>
    <br>

    <Row>
        <Column ColumnSize="ColumnSize.Is2">
            <Card Shadow="Shadow.Default" Border="Border.Is1.Rounded.Dark">
                <CardTitle Padding="Padding.Is3.FromTop">
                    <Heading TextSize="TextSize.Heading4" TextAlignment="TextAlignment.Center">PLAYERS</Heading>
                    <Divider />
                </CardTitle>
                <CardBody>

                </CardBody>
            </Card>
        </Column>
        <Column ColumnSize="ColumnSize.Is6">
        </Column>
        <Column ColumnSize="ColumnSize.Is4">
            <Card Shadow="Shadow.Default" Border="Border.Is1.Rounded.Dark">
                <CardTitle Padding="Padding.Is3.FromTop">
                    <Heading TextSize="TextSize.Heading4" TextAlignment="TextAlignment.Center">@Game.ArenaName</Heading>
                    <Divider />
                </CardTitle>
                <CardBody>

                </CardBody>
            </Card>
        </Column>
    </Row>
}


@code {

    Data.Game? Game { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        var uriBuilder = new UriBuilder(navManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        string strGameId = q["id"] ?? "";

        int gameId = 0;
        bool parsed = int.TryParse(strGameId, out gameId);

        if (!parsed)
        {
            // nothing at this page
            return;
        }

        Game = await Api.Games.GetGameById(gameId);

        Console.WriteLine(Game.DisplayName);

    }
}