@page "/hostgames"
@using NeedBodies.Auth
@inject NavigationManager navManager
@inject UserService userService
@inject ProtectedSessionStorage protectedSessionStorage

<AuthorizeView>
    <Authorized>

        @if (hostGames != null)
        {
            <Div Padding="Padding.Is4">
                <Div Margin="Margin.Is2.OnMobile.Is5.OnX.OnDesktop">
                    <PublicGamesTable Title="Registered Games" Games="@hostGames" />
                </Div>
            </Div>
        }

    </Authorized>
    <NotAuthorized>
        @{
            navManager.NavigateTo("/auth");
        }
    </NotAuthorized>
</AuthorizeView>

@code {

    List<Data.Game>? hostGames = null;

    protected override async Task OnInitializedAsync()
    {
        var userSession = await protectedSessionStorage.GetAsync<UserSession>("UserSession");
        if (!userSession.Success)
        {
            return;
        }
        int currentUserID = userSession.Value.ID;
        User? user = userService.GetByID(currentUserID.ToString());
        if (user == null) return;

        // ---

        hostGames = await Api.Games.GetHostGames(currentUserID);


    }
}