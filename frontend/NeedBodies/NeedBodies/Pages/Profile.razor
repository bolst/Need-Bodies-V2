@page "/profile"
@using NeedBodies.Auth
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider
@inject ProtectedSessionStorage protectedSessionStorage
@inject UserService userService

<AuthorizeView>
    <Authorized>
        @if (user != null)
        {
            <Div Padding="Padding.Is4">
                <Div Padding="Padding.Is4.OnTablet.Is4.OnY.OnMobile">
                    <ProfileSection Header="Account Info" iconName="IconName.IdCard">
                        <Table Borderless>
                            <TableBody>
                                <TableRow Position="Position.Relative">
                                    <TableRowCell>Username</TableRowCell>
                                    <TableRowCell>@user.Username</TableRowCell>
                                    <TableRowCell TextAlignment="TextAlignment.End">
                                        <Icon Name="IconName.Edit" />
                                    </TableRowCell>
                                </TableRow>
                                <TableRow Position="Position.Relative">
                                    <TableRowCell>Email</TableRowCell>
                                    <TableRowCell>@user.Email</TableRowCell>
                                    <TableRowCell TextAlignment="TextAlignment.End">
                                        <Icon Name="IconName.Edit" />
                                    </TableRowCell>
                                </TableRow>
                                <TableRow Position="Position.Relative">
                                    <TableRowCell>Password</TableRowCell>
                                    <TableRowCell>*************</TableRowCell>
                                    <TableRowCell TextAlignment="TextAlignment.End">
                                        <Icon Name="IconName.Edit" />
                                    </TableRowCell>
                                </TableRow>
                            </TableBody>
                        </Table>
                    </ProfileSection>
                </Div>
                <Div Padding="Padding.Is4.OnTablet.Is4.OnY.OnMobile">
                    <ProfileSection Header="Hosted Games" iconName="IconName.Receipt">
                        <PublicGamesTable Games="@hostGames" Title="" Removable Hosted />
                    </ProfileSection>
                </Div>
                <Div Padding="Padding.Is4.OnTablet.Is4.OnY.OnMobile">
                    <ProfileSection Header="Registered Games" iconName="IconName.Indent">
                        <PublicGamesTable Games="@userGames" Title="" Removable />
                    </ProfileSection>
                </Div>
            </Div>
        }
    </Authorized>
    <NotAuthorized>
        @{
            navManager.NavigateTo("/auth");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    bool barVisible = true;

    User? user = null;
    List<Data.Game> hostGames = new();
    List<Data.Game> userGames = new();

    int passwordLength = 0;

    protected override async Task OnInitializedAsync()
    {
        var userSession = await protectedSessionStorage.GetAsync<UserSession>("UserSession");
        if (!userSession.Success)
        {
            return;
        }
        int currentUserID = userSession.Value.ID;
        user = userService.GetByID(currentUserID.ToString());
        if (user == null) return;

        // ---

        hostGames = await Api.Games.GetHostGames(currentUserID);
        userGames = await Api.Games.GetUserGames(currentUserID);

    }


    Task ToggleSideBar()
    {
        barVisible = !barVisible;
        return Task.CompletedTask;
    }
}